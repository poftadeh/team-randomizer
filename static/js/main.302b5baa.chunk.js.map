{"version":3,"sources":["components/screens/PlayerCount.js","components/utils/PlayerEdit.js","components/screens/PlayerList.js","components/utils/PlayerTable.js","components/utils/TeamResults.js","components/screens/GenerateTeams.js","types.js","App.js","serviceWorker.js","index.js"],"names":["PlayerCount","props","handleSubmit","bind","className","onSubmit","this","type","name","min","max","defaultValue","required","e","preventDefault","playerCount","target","elements","countInput","value","createPlayers","Component","currentPlayer","playerList","handleSelect","handleInputChange","onChange","veto","filter","player","map","key","id","PlayerList","state","players","goToPreviousScreen","changeView","PlayerEdit","setVeto","setName","setState","onClick","team","teamNumber","index","teams","length","i","PlayerTable","GenerateTeams","TeamResults","constructTeams","console","log","vetos","includes","find","teamPlayer","teamWithSameVetoAsPlayer","teamWithFewestPlayers","compatibleTeams","findCompatibleTeams","Error","forEach","indexOf","push","sortedPlayers","sort","a","b","Math","random","availableTeam","getAvailableTeam","JSON","stringify","Player","playerId","Number","Views","Symbol","App","lineups","activeView","previousScreen","number","view","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.302b5baa.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class PlayerCount extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  render() {\n    return (\n      <div className=\"player-count-screen d-flex flex-column\">\n        <h4 className=\"text-uppercase mt-4\">Number of Players:</h4>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"d-flex flex-column align-items-center mt-4\">\n            <input\n              type=\"number\"\n              name=\"countInput\"\n              className=\"form-control player-count-screen__input\"\n              min={2}\n              max={20}\n              defaultValue={6}\n              required\n            />\n            <button className=\"btn btn-lg btn-primary mt-4\">Next</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const playerCount = e.target.elements.countInput.value;\n    this.props.createPlayers(playerCount);\n  }\n}\n","import React from 'react';\n\nexport default ({\n  currentPlayer,\n  playerList,\n  handleSelect,\n  handleInputChange,\n}) => {\n  return (\n    <>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        defaultValue={currentPlayer.name}\n        onChange={handleInputChange}\n      />\n      <div className=\"input-group-append player-list\">\n        <select\n          className=\"custom-select\"\n          onChange={handleSelect}\n          defaultValue={currentPlayer.veto || null}\n        >\n          <option value={null} onChange={handleSelect}>\n            No Veto\n          </option>\n          {playerList\n            .filter(player => player !== currentPlayer)\n            .map(player => {\n              return (\n                <option\n                  key={player.id}\n                  value={player.id}\n                  onChange={handleSelect}\n                >\n                  {player.name}\n                </option>\n              );\n            })}\n        </select>\n      </div>\n    </>\n  );\n};\n","import React, { Component } from 'react';\nimport PlayerEdit from '../utils/PlayerEdit';\n\nexport default class PlayerList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: this.props.players,\n    }\n  }\n\n  render() {\n    const { goToPreviousScreen, changeView } = this.props;\n    return (\n      <div className=\"d-flex flex-column align-items-center container\">\n        <h4 className=\"mb-4 text-uppercase\">Configure Players</h4>\n        {this.props.players.map(player => (\n          <div key={player.id} className=\"input-group mb-3 col-sm-12\">\n            <PlayerEdit\n              currentPlayer={player}\n              playerList={this.props.players}\n              handleSelect={e => {\n                player.setVeto(e.target.value);\n              }}\n              handleInputChange={e => {\n                player.setName(e.target.value);\n                this.setState({players: this.props.players})\n              }}\n            />\n          </div>\n        ))}\n        <div className=\"d-flex justify-content-around mt-3\">\n          <button\n            className=\"btn btn-lg btn-primary m-3\"\n            onClick={goToPreviousScreen}\n          >\n            Back\n          </button>\n          <button className=\"btn btn-lg btn-primary m-3\" onClick={changeView}>\n            Generate\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default ({ team, teamNumber }) => {\n  return (\n    <>\n      <h5>{`Team ${teamNumber}`}</h5>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {team.players.map((player, index) => {\n            return (\n              <tr key={player.id}>\n                <td>{player.name}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport PlayerTable from './PlayerTable';\n\nexport default ({ teams }) => {\n  if (teams && teams.length > 0) {\n    return (\n      <>\n        {teams.map((team, i) => (\n            <PlayerTable key={i} team={team} teamNumber={i + 1}/>\n        ))}\n      </>\n    );\n  } else if (teams && teams.length === 0) {\n    return (\n      <div className=\"alert alert-danger\">\n        No teams found with current settings\n      </div>\n    );\n  } else {\n    return <div>Generating...</div>;\n  }\n};\n","import React, { Component } from 'react';\nimport TeamResults from '../utils/TeamResults';\n\nexport default class GenerateTeams extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teams: null,\n    };\n  }\n\n  render() {\n    const { teams } = this.state;\n    return (\n      <>\n        <TeamResults teams={teams} />\n        <button\n          className=\"btn btn-lg btn-primary mb-3\"\n          onClick={this.props.goToPreviousScreen}\n        >\n          Back\n        </button>\n      </>\n    );\n  }\n\n  componentDidMount() {\n    try {\n      this.constructTeams();\n    } catch (e) {\n      console.log(e);\n      this.setState({ teams: [] });\n    }\n  }\n\n  findCompatibleTeams(player, teams) {\n    return teams.filter(\n      team =>\n        !team.vetos.includes(player.id) &&\n        !team.players.find(teamPlayer => teamPlayer.id === player.veto),\n    );\n  }\n\n  getAvailableTeam(player, teams) {\n    let teamWithSameVetoAsPlayer;\n    let teamWithFewestPlayers;\n\n    let compatibleTeams = this.findCompatibleTeams(player, teams);\n\n    if (compatibleTeams.length < 1) {\n      console.log('t', teams, player);\n      throw new Error('Found no compatible teams for player');\n    } else if (compatibleTeams.length > 1) {\n      teamWithFewestPlayers =\n        compatibleTeams[0].players.length < compatibleTeams[1].players.length\n          ? compatibleTeams[0]\n          : compatibleTeams[1];\n\n      if (player.veto) {\n        teamWithSameVetoAsPlayer = compatibleTeams.find(team =>\n          team.vetos.includes(player.veto),\n        );\n      }\n    } else {\n      // there is only one possible team\n      compatibleTeams = compatibleTeams[0];\n    }\n\n    return teamWithSameVetoAsPlayer || teamWithFewestPlayers || compatibleTeams;\n  }\n\n  constructTeams() {\n    const { players } = this.props;\n    const teams = [{ players: [], vetos: [] }, { players: [], vetos: [] }];\n    const vetos = [];\n\n    players.forEach(player => {\n      if (vetos.indexOf(player.veto === -1)) vetos.push(player.veto);\n    });\n    console.log('unsorted', players);\n    let sortedPlayers = [...players].sort((a, b) => {\n      if (a.veto && b.veto) {\n        return a.veto > b.veto ? -1 : 1;\n      } else if (a.veto || b.veto) {\n        return a.veto ? -1 : 1;\n      } else if (vetos.includes(a.id)) {\n        return -1;\n      } else if (vetos.includes(b.id)) {\n        return 1;\n      } else {\n        return 0.5 - Math.random();\n      }\n    });\n\n    console.log('sorted', sortedPlayers);\n    sortedPlayers.forEach(player => {\n      const availableTeam = this.getAvailableTeam(player, teams);\n      try {\n        availableTeam.players.push(player);\n      } catch (e) {\n        console.log(e);\n        console.log(JSON.stringify(availableTeam));\n      }\n\n      if (player.veto && availableTeam.vetos.indexOf(player.veto) === -1)\n        availableTeam.vetos.push(player.veto);\n    });\n\n    this.setState({ teams });\n  }\n}\n","export class Player {\n  constructor({id, name}={}) {\n    this.id = id;\n    this.name = name;\n    this.veto = null;\n  }\n\n  setName(name) {\n    this.name = name;\n  }\n\n  setVeto(playerId) {\n    this.veto = Number(playerId) || null;\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport PlayerCount from './components/screens/PlayerCount';\nimport PlayerList from './components/screens/PlayerList';\nimport GenerateTeams from './components/screens/GenerateTeams';\nimport { Player } from './types.js';\n\nconst Views = {\n  PlayerCount: Symbol('PlayerCount'),\n  PlayerList: Symbol('PlayerList'),\n  GenerateTeams: Symbol('GenerateTeams'),\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: [],\n      lineups: [],\n      activeView: Views.PlayerCount,\n    };\n    this.previousScreen = this.state.activeView;\n    this.createPlayers = this.createPlayers.bind(this);\n  }\n  render() {\n    const { activeView, players } = this.state;\n    return (\n      <div className=\"d-flex flex-column align-items-center mt-5 mx-auto col-lg-6\">\n        <h1 className=\"text-uppercase text-center mb-4\">Team Randomizer</h1>\n        {activeView === Views.PlayerCount && (\n          <PlayerCount createPlayers={this.createPlayers} />\n        )}\n        {activeView === Views.PlayerList && (\n          <PlayerList\n            players={players}\n            goToPreviousScreen={this.changeView.bind(this, Views.PlayerCount)}\n            changeView={this.changeView.bind(this, Views.GenerateTeams)}\n          />\n        )}\n        {activeView === Views.GenerateTeams && (\n          <GenerateTeams\n            players={players}\n            goToPreviousScreen={this.changeView.bind(this, Views.PlayerList)}\n          />\n        )}\n      </div>\n    );\n  }\n\n  createPlayers(number) {\n    const players = [];\n    for (let i = 1; i <= number; i++) {\n      players.push(new Player({ id: i, name: `Player ${i}` }));\n    }\n    this.setState({ players });\n    this.changeView(Views.PlayerList);\n  }\n\n  changeView(view) {\n    this.setState({ activeView: view });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}